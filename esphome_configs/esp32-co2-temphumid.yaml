esphome:
  name: iot-esp32-room-co2th
  friendly_name: Home CO2/T/H Sensor – Room
  name_add_mac_suffix: false

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino  # Arduino framework for broad compatibility

# Enable logging for debugging (via serial)
logger:

# Home Assistant API for native integration
api:
  encryption:
    key: "REPLACE_WITH_API_ENCRYPTION_KEY"

# Enable OTA firmware updates
ota:
  - platform: esphome
    password: "REPLACE_WITH_OTA_PASSWORD"

# Static IP configuration for reliability
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: none
  domain: .your-domain.local
  manual_ip:
    static_ip: 192.168.1.176
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

# I²C communication bus for SCD41 sensor
i2c:
  sda: GPIO8
  scl: GPIO9
  scan: true
  id: bus_a

# SCD41 sensor – measures CO2, temperature, humidity
sensor:
  - platform: scd4x
    id: scd41
    co2:
      name: "CO2 Room"
      accuracy_decimals: 0
      unit_of_measurement: "ppm"
      id: scd41co2
    temperature:
      name: "Room Temperature"
      accuracy_decimals: 1
      unit_of_measurement: "°C"
      id: scd41_temperature
    humidity:
      name: "Room Humidity"
      accuracy_decimals: 0
      unit_of_measurement: "%"
    update_interval: 15s
 # Add non-linear calibration platform
  - platform: template
      name: "Room Temperature Calibrated"
      unit_of_measurement: "°C"
      accuracy_decimals: 1
      lambda: |- # Replace values according to measurements table
          float slope = -0.31; 
          float reference_temp = 24.0;
          float base_error = 2.3;
          return id(scd41_temperature).state + (slope * (id(scd41_temperature).state - reference_temp)) - base_error;
      update_interval: 15s

# Manually set a reference CO2 value for calibration
number:
  - platform: template
    name: "CO2 Calibration Reference"
    id: co2_calibration_value
    optimistic: true
    min_value: 400
    max_value: 2000
    step: 1
    initial_value: 400
    unit_of_measurement: "ppm"
    icon: "mdi:molecule-co2"

# Buttons to trigger forced calibration or factory reset
button:
  - platform: template
    name: "Calibrate CO2 Sensor"
    icon: "mdi:calibration"
    on_press:
      then:
        - lambda: |-
            id(scd41).perform_forced_calibration(id(co2_calibration_value).state);
        - logger.log: 
            format: "Forced calibration with reference %d ppm"
            args: ["int(id(co2_calibration_value).state)"]

  - platform: template
    name: "CO2 Sensor Factory Reset"
    icon: "mdi:restore"
    id: factory_reset_button
    on_press:
      then:
        - scd4x.factory_reset: scd41
        - logger.log: "SCD41 sensor factory reset initiated"

# Optional: Switch for enabling/disabling auto calibration
switch:
  - platform: template
    name: "CO2 Auto Calibration"
    id: co2_auto_calibration
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    icon: "mdi:calibration"
    on_turn_on:
      - lambda: 'id(scd41).set_automatic_self_calibration(true);'
      - logger.log: "Enabled automatic self-calibration"
    on_turn_off:
      - lambda: 'id(scd41).set_automatic_self_calibration(false);'
      - logger.log: "Disabled automatic self-calibration"